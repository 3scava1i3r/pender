stages:
  - test
  - build_qa
  - deploy_qa
#  - build_live
#  - deploy_live

test:
  image: meedan/ruby
  tags:
    - meedan
    - meedan-labs
  allow_failure: true
  stage: test
  variables:
    RAILS_ENV: "test"
  script:
    - apt-get update
    - apt-get install -y redis-server git sudo
    - echo '# Some DNS cached entries below' | sudo tee -a /etc/hosts
    - for host in facebook.com twitter.com m.facebook.com www.facebook.com m.twitter.com youtube.com; do ping -c 1 $host | head -1 | sed "s/^[^(]\+(\([0-9\.]\+\).*/\1 $host/g" | sudo tee -a /etc/hosts; done
    - echo 'Hosts:' && cat /etc/hosts
    #- export PATH=/tmp/bundler/ruby/2.3.0/bin:$PATH
    #- export GEM_PATH=/tmp/bundler/ruby/2.3.0/gems:$GEM_PATH
    - redis-server &
    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    - rm -rf tmp/cache tmp/cache1 tmp/cache2 tmp/cache3 && mkdir -p tmp/cache tmp/cache1 tmp/cache2 tmp/cache3
    - d=configurator/check/test/pender/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
    - bundle install --without nothing
    - bundle exec sidekiq -L /tmp/sidekiq-log.log -d
    - cd bin && ./setup-parallel-test-env && cd -
    - bundle exec rake "parallel:test[3]"
  #after_script:
    #- cat tmp/performance.csv
    # - bundle exec codeclimate-test-reporter
build_qa:
  image: docker:latest
  services:
    - docker:dind
  tags:
    - meedan
    - meedan-labs
  stage: build_qa
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
  script:
    - apk add --no-cache curl jq python py-pip git
    - pip install awscli
    - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    - d=configurator/check/qa/pender/; for f in $(find $d -type f); do cp "$f" "${f/$d/}"; done
    - docker build  -f Dockerfile.production -t "$QA_ECR_API_BASE_URL:$CI_COMMIT_SHA"  .
    - docker push "$QA_ECR_API_BASE_URL:$CI_COMMIT_SHA"
  only:
    - develop

deploy_qa:
  image: python:3-alpine
  stage: deploy_qa
  tags:
    - meedan
    - meedan-labs
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    AWS_DEFAULT_REGION: $AWS_DEFAULT_REGION
  script:
    - apk add --no-cache curl jq python py-pip git
    - pip install ecs-deploy==1.7.0
    - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/meedan/configurator ./configurator
    - source configurator/check/qa/pender/config/.env
    - ecs deploy ecs-qa  qa-pender --image qa-pender-c $QA_ECR_API_BASE_URL:$CI_COMMIT_SHA -e qa-pender-c REDIS_HOST $REDIS_HOST -e qa-pender-c REDIS_PORT $REDIS_PORT -e qa-pender-c REDIS_DATABASE $REDIS_DATABASE -e qa-pender-c COOKIES $COOKIES -e qa-pender-c CACHE_DIR $CACHE_DIR -e qa-pender-c SCREENSHOTS_DIR $SCREENSHOTS_DIR  --timeout -1
    - echo "new Image was deployed $QA_ECR_API_BASE_URL:$CI_COMMIT_SHA"
  only:
    - develop